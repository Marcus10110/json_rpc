// This file is auto-generated by the jankiest code evr!
#include "${params['include'].replace('.h', '.gen.h')}"


% for ns in params['namespaces']:
namespace ${ns['name']} 
{
% for Class in ns['classes']:
    std::string ParseMessageFor${Class['name']}( ${Class['name']}& target, std::string message )
    {
        std::stringstream ss (message);
        cereal::JSONInputArchive archive( ss );
        std::string function;
        archive( CEREAL_NVP( function ) );
% for m in Class['methods']:
        ${'} else ' if m != Class['methods'][0] else ''}if( function == "${m['name']}" ) {
% for arg in m['args']:
            ${arg['type']} ${arg['name']};
% endfor
% for arg in m['args']:
            archive( cereal::make_nvp("${arg['json_name']}", ${arg['name']}) );
% endfor

            ${'auto result = ' if m['returnType'] != 'void' else '' }target.${m['name']}(
% for arg in m['args']:
                ${arg['name']}${',' if arg != m['args'][-1] else ''}
% endfor
            );
% endfor   
%if len(Class['methods']) > 0:
        }
% endif
% endfor
        return "";
    }
}
% endfor